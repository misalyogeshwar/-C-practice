#include <iostream>
#include <limits>

using namespace std;

struct node
  {
      int data;
      node * left ;
      node * right;
  };
node * newNode(int data)
    {
        node * temp = new node();
        temp->data = data;
        temp->left = NULL;
        temp->right = NULL;
        return temp;
    }

void print_inorder(node *root)
{
    if(root == NULL)
        return;
    else
    {
        print_inorder(root->left);
        cout << "\t" << root->data;
        print_inorder(root->right);
    }
}

bool check_child_sum_prop(node * root)
{
    int no1 = 0;
    int no2 = 0;
    if(root == NULL)
        return false;
    else if (root->left == NULL && root->right == NULL)
    {
        return true;
    }
    else
    {
        if(check_child_sum_prop(root->left))
            no1 = root->left->data;
        if(check_child_sum_prop(root->right))
            no2 = root->right->data;

        if(root->data == no1 + no2)
            return true;
    }
    return false;
}

int main()
    {
        cout << "Hello world!" << endl;
        node * root = newNode(28);
        root->left = newNode(22);
        root->right = newNode(6);
        root->left->left = newNode(10);
        root->right->left = newNode(6);
        root->left->right = newNode(12);

        print_inorder(root);

        check_child_sum_prop(root)?cout << "\n\ttrue":cout << "\n\tfalse";
    }
