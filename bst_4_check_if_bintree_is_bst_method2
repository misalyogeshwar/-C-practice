#include<stdio.h>
#include<stdlib.h>
#include<limits.h>

struct node
{
    int data;
    struct node * left;
    struct node * right;
};

struct node * newNode(int data)
{
    struct node * temp = (struct node *)malloc(sizeof(struct node));
    temp->data = data;
    temp->left = NULL;
    temp->right = NULL;
    return temp;
};
bool check_if_bst(node * root)
{
    static struct node * prev = NULL;
    if(root != NULL)
    {   check_if_bst(root->left);

        printf("\t%d", root->data);

        if(prev!= NULL)
        {   printf("(prev = %d )", prev->data);
            if(prev->data > root->data)
                {
                    printf("\n\t Not a BST");
                    return false;
                }
        }

        prev = root;
        check_if_bst(root->right);
    }

    return true;
}

int main()
{
    printf("\n\tHello !");
    struct node * root = newNode(50);
    root->left = newNode(30);
    root->right = newNode(60);
    root->left->left = newNode(20);
    root->left->right = newNode(40);
    check_if_bst(root);
    return 0;
}
