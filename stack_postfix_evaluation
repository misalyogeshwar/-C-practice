#include <iostream>
#include <limits.h>
using namespace std;

struct Stack
{
unsigned capacity;
int top;
int *Array;
};

Stack * createStack(unsigned cap){
    Stack * st = new Stack();
    if(!st)
        return NULL;

    st->top = -1;
    st->capacity = cap;
    st->Array = new int[cap*sizeof(int)];
    return st;
    }
int isFull(Stack * s)
{
    return s->top == s->capacity -1;
}

int isEmpty(Stack *s){
    return s->top == -1;
}

void push(Stack *s , int item){
    if(isFull(s))
        return;
    s->Array[++s->top] = item;
    cout << "\n\t" << item << "pushed to stack";
}

int pop(Stack *s){
    if(isEmpty(s))
        return INT_MIN;

    return s->Array[s->top--];
}

void postfix_eval(string exp){
    Stack *st = createStack(5);

    if (!st) return;

    for (int i = 0; exp[i]; i++){
        if(isdigit(exp[i]))
            push(st,exp[i] - '0');
        else
        {
            int val1 = pop(st);
            int val2 = pop(st);
            switch(exp[i])
            {
                case '+': push(st,val2+val1); break;
                case '-': push(st,val2-val1); break;
                case '*': push(st,val2*val1); break;
            }
        }
    }
    cout << "\n\t Answer is : " << pop(st);
}

int main()
{
    cout << "Hello world!" << endl;
    string exp = "231*+9-";
    postfix_eval(exp);
    return 0;
}
